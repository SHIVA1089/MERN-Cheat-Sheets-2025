🔷 What is Redis?

Redis (REmote DIctionary Server) is an open-source, in-memory data structure store used as:

* Database
* Cache
* Message broker
* Session store

It stores data in RAM, which makes it extremely fast (sub-millisecond response times).


✅ Why Do We Need Redis?

🔹 1. Speed

* Redis stores everything in memory → super fast!
* Great for real-time apps (e.g., chat, gaming, analytics).

🔹 2. Caching

* Reduces database load by caching frequent queries.
* Example: Store user sessions, product pages, API responses.

🔹 3. Data Structures

* Supports powerful data types (lists, sets, hashes, etc.) beyond just key-value.

🔹 4. Pub/Sub Messaging

* Useful for real-time messaging and event-based systems.

🔹 5. Atomic Operations

* Commands are atomic — no race conditions or partial updates.


🔸 Redis Data Types:

1. 🔑 String

* Most basic type. Binary-safe.
* Store text, JSON, numbers, etc.
✅ Use cases: Caching, counters, tokens.

2. 📃 List

* Ordered list of strings.
* Can push/pop from both ends.
✅ Use cases: Queues, task lists, chat messages.

3. 📦 Set

* Unordered collection of unique values.
✅ Use cases: Tags, unique visitors, user roles.

4. 🧾 Hash

* Like a dictionary (key-value inside a key).
✅ Use cases: User profiles, configs, objects.

5. 📊 Sorted Set (ZSet)

* Like Set, but each value has a score (sorted by score).
✅ Use cases: Leaderboards, ranking, time-series.

6. ⚡ Bitmap

* Bit-level operations on strings (compact & fast).
✅ Use cases: Feature flags, user activity tracking.


7. 🔢 HyperLogLog

* Probabilistic data structure to estimate unique items with low memory.
✅ Use cases: Unique visitors, analytics.

8. 🌍 Geo

* Store geographic locations (latitude, longitude) and query by radius.
✅ Use cases: Nearby places, delivery radius, tracking.


9. 📡 Streams

* Log-like data structure for event streaming.
✅ Use cases: Logs, chat, message queues.


10. 📣 Pub/Sub

* Publish/Subscribe messaging between clients.
✅ Use cases: Notifications, chat, real-time updates.